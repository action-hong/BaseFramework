ext {
    versions = [
            support               : "27.1.1",
            firebase              : '12.0.1',
            moshi                 : "1.5.0",
            okHttp                : "3.10.0",
            retrofit              : '2.4.0',
            dagger                : '2.15',
            butterKnife           : '8.8.1',
            rxKotlin              : '2.2.0',
            rxAndroid             : '2.0.2',
            rxPermissions         : '0.10.2',
            rxlifecycle2SdkVersion: '2.2.2',
            sqlbrite              : '3.2.0',
            traceur               : '1.0.1',
            stetho                : '1.5.0',
            timber                : '4.7.0',
            glide                 : '4.6.1',
            sherlock              : '1.0.4@aar',

            espresso              : '3.0.1',
            testRunner            : '1.0.1',
            hamcrest              : '1.4-atlassian-1',
            restMock              : '0.3.1',
            mockito               : '2.18.0',
            junit                 : '4.12',
            robolectric           : '3.8',
            assertj               : '1.2.0',
            powerMock             : '1.6.6',
            leakcanary            : '1.5.4',
            stethOkhttp           : '1.5.0',
            multiDex              : '1.0.3',
            mockitoKotlin         : '1.5.0',
            "auto-parcel"         : '1.0.3'
    ]

    mockito = [mockito: "org.mockito:mockito-core:$versions.mockito"]
    junit = [junit: "junit:junit:$versions.junit"]
    // https://github.com/andrzejchm/RESTMock mock rest api
    restMock = [restMock: "com.github.andrzejchm.RESTMock:android:$versions.restMock"]

    supportDeps = [
            cardView           : "com.android.support:cardview-v7:$versions.support",
            appcompatV7        : "com.android.support:appcompat-v7:$versions.support",
            design             : "com.android.support:design:$versions.support",
            recyclerView       : "com.android.support:recyclerview-v7:$versions.support",
            supportAnnotation  : "com.android.support:support-annotations:$versions.support",
            gridLayout         : "com.android.support:gridlayout-v7:$versions.support",
            multiDex           : "com.android.support:multidex:$versions.multiDex",
            "constraint-layout": "com.android.support.constraint:constraint-layout:1.1.2"
    ]

    rxJava = [
            rxKotlin                 : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            rxAndroid                : "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            traceur                  : "com.tspoon.traceur:traceur:$versions.traceur",
            rxRermissions            : "com.github.tbruyelle:rxpermissions:$versions.rxPermissions",
            "rxlifecycle2"           : "com.trello.rxlifecycle2:rxlifecycle-kotlin:$versions.rxlifecycle2SdkVersion",
            "rxlifecycle2-android"   : "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:$versions.rxlifecycle2SdkVersion",
            "rxlifecycle2-components": "com.trello.rxlifecycle2:rxlifecycle-components:$versions.rxlifecycle2SdkVersion",
    ]

    retrofit = [
            retrofit                 : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter                : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            moshiConverter           : "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
            sqlbrite                 : "com.squareup.sqlbrite3:sqlbrite-kotlin:$versions.sqlbrite",
            "retrofit-converter-gson": "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    ]

    moshi = [
            moshi: "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp: "com.squareup.okhttp3:okhttp:$versions.okHttp",
            stetho: "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
    ]

    autoParcel = [
            auto: "frankiesardo:auto-parcel:$versions.auto-parcel"
    ]

    onlyDebug = [
            chuck: "com.readystatesoftware.chuck:library:1.1.0"
    ]

    onlyRelease = [
            chuckNoOp   : 'com.readystatesoftware.chuck:library-no-op:1.1.0',
            sherlockNoOp: 'com.github.ajitsing:sherlock-no-op:1.0.4@aar'
    ]

    unitTest = [
            harcrestCore       : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib       : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration: "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            robolectric        : "org.robolectric:robolectric:$versions.robolectric",
            supportAnnotation  : "com.android.support:support-annotations:$versions.support",
            restMock           : "com.github.andrzejchm.RESTMock:android:$versions.restMock",
            assertj            : "com.squareup.assertj:assertj-android:$versions.assertj",
            kotlinTest         : "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
            kotlinJunit        : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            mockitoKotlin      : "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"

    ] + junit + mockito + restMock

    androidTests = [
            mockitoAndroid    : "org.mockito:mockito-android:$versions.mockito",
            espressoCore      : "com.android.support.test.espresso:espresso-core:$versions.espresso",
            espressoContrib   : "com.android.support.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents   : "com.android.support.test.espresso:espresso-intents:$versions.espresso",
            espressoAcc       : "com.android.support.test.espresso:espresso-accessibility:$versions.espresso",
            espressoIdle      : "com.android.support.test.espresso:espresso-idling-resource:$versions.espresso",
            espressoConcurrent: "com.android.support.test.espresso.idling:idling-concurrent:$versions.espresso",
            espressoNetIdle   : "com.android.support.test.espresso.idling:idling-net:$versions.espresso",
            testRunner        : "com.android.support.test:runner:$versions.testRunner",
            testRules         : "com.android.support.test:rules:$versions.testRunner"
    ] + mockito + restMock

    leakCannary = "com.squareup.leakcanary:leakcanary-android:1.5.1"
    timber = "com.jakewharton.timber:timber:$versions.timber"
    // https://github.com/ajitsing/Sherlock Sherlock reports any crash that occurres in your application as a notification.
    sherlock = "com.github.ajitsing:sherlock:$versions.sherlock"

    dagger = "com.google.dagger:dagger:$versions.dagger"
    daggerCompiler = "com.google.dagger:dagger-compiler:$versions.dagger"

    glide = "com.github.bumptech.glide:glide:$versions.glide"
    glideCompiler = "com.github.bumptech.glide:compiler:$versions.glide"
    glideOkhttp = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"

    supportLibs = supportDeps.values()
    networkLibs = retrofit.values() + okHttp.values() + moshi.values()
    rxJavaLibs = rxJava.values()
    otherLibs = [timber, dagger, glide]

    debugLibs = onlyDebug.values() + leakCannary
    releaseLibs = onlyRelease.values() + leakCannary
    annotationProcessorLibs = [daggerCompiler, glideCompiler]

    unitTestLibs = unitTest.values() + leakCannary
    androidTestsLibs = androidTests.values() + supportLibs
}